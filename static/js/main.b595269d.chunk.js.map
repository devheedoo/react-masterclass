{"version":3,"sources":["api.ts","routes/Chart.tsx","routes/Price.tsx","routes/Coin.tsx","routes/Coins.tsx","Router.tsx","configs/theme.ts","App.tsx","index.tsx"],"names":["COINPAPRIKA_BASE_URL","fetchAllCoins","fetch","then","res","json","Chart","coinId","useQuery","endDate","Math","floor","Date","now","startDate","fetchOhlcv","isLoading","ohlcv","data","type","series","name","map","price","close","options","theme","mode","chart","height","width","toolbar","show","background","yaxis","xaxis","axisBorder","labels","categories","time_close","fill","gradient","gradientToColors","stops","colors","tooltip","y","formatter","value","toFixed","Price","Container","styled","div","Header","header","Title","h1","Loader","Overview","OverviewItem","Description","p","Tabs","Tab","props","isActive","accentColor","textColor","Coin","useParams","state","useLocation","matchesPrice","useRouteMatch","matchesChart","fetchCoin","isLoadingCoin","coin","fetchTicker","isLoadingTicker","ticker","title","history","useHistory","Helmet","onClick","goBack","rank","symbol","open_source","description","total_supply","max_supply","to","path","CoinList","ul","backgroundColor","CoinImage","img","Coins","slice","pathname","id","src","toLowerCase","Router","ThemeName","darkTheme","lightTheme","GlobalStyle","createGlobalStyle","ButtonWrapper","ThemeToggleButton","button","App","useState","DARK","setTheme","LIGHT","initialIsOpen","queryClient","QueryClient","ReactDOM","render","StrictMode","client","document","getElementById"],"mappings":"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","file":"static/js/main.b595269d.chunk.js","sourcesContent":["const COINPAPRIKA_BASE_URL = \"https://api.coinpaprika.com/v1\";\n\nexport function fetchAllCoins() {\n  return fetch(`${COINPAPRIKA_BASE_URL}/coins`).then((res) => res.json());\n}\n\nexport function fetchCoin(coinId: string) {\n  return fetch(`${COINPAPRIKA_BASE_URL}/coins/${coinId}`).then((res) =>\n    res.json()\n  );\n}\n\nexport function fetchTicker(coinId: string) {\n  return fetch(`${COINPAPRIKA_BASE_URL}/tickers/${coinId}`).then((res) =>\n    res.json()\n  );\n}\n\nexport function fetchOhlcv(coinId: string) {\n  const endDate = Math.floor(Date.now() / 1000);\n  const startDate = endDate - 7 * 24 * 60 * 60;\n  return fetch(\n    `${COINPAPRIKA_BASE_URL}/coins/${coinId}/ohlcv/historical?start=${startDate}&end=${endDate}`\n  ).then((res) => res.json());\n}\n","import { useQuery } from \"react-query\";\nimport { fetchOhlcv } from \"../api\";\nimport ApexChart from \"react-apexcharts\";\n\ninterface ChartProps {\n  coinId: string;\n}\n\ninterface IOhlcv {\n  time_open: string;\n  time_close: string;\n  open: number;\n  high: number;\n  low: number;\n  close: number;\n  volume: number;\n  market_cap: number;\n}\n\nfunction Chart({ coinId }: ChartProps) {\n  const { isLoading, data: ohlcv } = useQuery<IOhlcv[]>([\"ohlcv\", coinId], () =>\n    fetchOhlcv(coinId)\n  );\n  return (\n    <div>\n      {isLoading ? (\n        \"Loading...\"\n      ) : (\n        <ApexChart\n          type=\"line\"\n          series={[\n            {\n              name: \"Price\",\n              data: ohlcv?.map((price) => price.close),\n            },\n          ]}\n          options={{\n            theme: {\n              mode: \"dark\",\n            },\n            chart: {\n              height: 300,\n              width: 500,\n              toolbar: {\n                show: false,\n              },\n              background: \"transparent\",\n            },\n            yaxis: {\n              show: false,\n            },\n            xaxis: {\n              axisBorder: { show: false },\n              labels: { show: false },\n              type: \"datetime\",\n              categories: ohlcv?.map((price) => price.time_close),\n            },\n            fill: {\n              type: \"gradient\",\n              gradient: { gradientToColors: [\"#0be881\"], stops: [0, 100] },\n            },\n            colors: [\"#0fbcf9\"],\n            tooltip: {\n              y: {\n                formatter: (value) => `$${value.toFixed(2)}`,\n              },\n            },\n          }}\n        />\n      )}\n    </div>\n  );\n}\n\nexport default Chart;\n","function Price() {\n  return <h1>Price</h1>;\n}\n\nexport default Price;\n","import { Helmet } from \"react-helmet\";\nimport { useQuery } from \"react-query\";\nimport {\n  Route,\n  Switch,\n  useHistory,\n  useLocation,\n  useParams,\n  useRouteMatch,\n} from \"react-router\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport { fetchCoin, fetchTicker } from \"../api\";\nimport Chart from \"./Chart\";\nimport Price from \"./Price\";\n\nconst Container = styled.div`\n  padding: 10px 20px;\n  max-width: 480px;\n  margin: 0 auto;\n`;\n\nconst Header = styled.header`\n  height: 15vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Title = styled.h1`\n  font-size: 40px;\n`;\n\nconst Loader = styled.div`\n  display: block;\n  text-align: center;\n`;\n\nconst Overview = styled.div`\n  background-color: rgba(0, 0, 0, 0.2);\n  border-radius: 10px;\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  align-items: center;\n  padding: 10px 20px;\n  margin: 5px 0px;\n`;\n\nconst OverviewItem = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  span:first-child {\n    font-weight: bold;\n    margin-bottom: 5px;\n  }\n`;\n\nconst Description = styled.p`\n  padding: 10px 20px;\n`;\n\nconst Tabs = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n`;\n\nconst Tab = styled.div<{ isActive: boolean }>`\n  flex: 1;\n  justify-content: center;\n  align-items: center;\n  text-align: center;\n  background-color: rgba(0, 0, 0, 0.4);\n  border-radius: 10px;\n  margin: 5px;\n  color: ${(props) =>\n    props.isActive ? props.theme.accentColor : props.theme.textColor};\n  a {\n    display: block;\n    padding: 10px 20px;\n  }\n`;\n\ninterface RouteParams {\n  coinId: string;\n}\n\ninterface RouteState {\n  name: string;\n}\n\ninterface ICoin {\n  id: string;\n  name: string;\n  symbol: string;\n  rank: number;\n  is_new: boolean;\n  is_active: boolean;\n  type: string;\n  // tags: object;\n  // team: object;\n  description: string;\n  message: string;\n  open_source: boolean;\n  started_at: string;\n  development_status: string;\n  hardware_wallet: boolean;\n  proof_type: string;\n  org_structure: string;\n  hash_algorithm: string;\n  // links: object;\n  // links_extended: object;\n  // whitepaper: object;\n  first_data_at: string;\n  last_data_at: string;\n}\n\ninterface ITicker {\n  id: string;\n  name: string;\n  symbol: string;\n  rank: number;\n  circulating_supply: number;\n  total_supply: number;\n  max_supply: number;\n  beta_value: number;\n  first_data_at: string;\n  last_updated: string;\n  quotes: {\n    USD: {\n      price: number;\n    };\n  };\n}\n\nfunction Coin() {\n  const { coinId } = useParams<RouteParams>();\n  const { state } = useLocation<RouteState>();\n  const matchesPrice = useRouteMatch(\"/:coinId/price\");\n  const matchesChart = useRouteMatch(\"/:coinId/chart\");\n\n  const { isLoading: isLoadingCoin, data: coin } = useQuery(\n    [\"coin\", coinId],\n    () => fetchCoin(coinId)\n  );\n  const { isLoading: isLoadingTicker, data: ticker } = useQuery(\n    [\"ticker\", coinId],\n    () => fetchTicker(coinId)\n  );\n  const isLoading = isLoadingCoin || isLoadingTicker;\n  const title =\n    state?.name ?? (isLoading ? <Loader>Loading...</Loader> : coin?.name);\n\n  const history = useHistory();\n\n  return (\n    <Container>\n      <Helmet>\n        <title>{title}</title>\n      </Helmet>\n      <button onClick={history.goBack}>Back</button>\n      <Header>\n        {/* React Route로 전달 받기 때문에 직접 URL 접근 시 값이 없음 */}\n        <Title>{title}</Title>\n      </Header>\n      {isLoading ? (\n        <Loader>Loading...</Loader>\n      ) : (\n        <>\n          <Overview>\n            <OverviewItem>\n              <span>Rank</span>\n              <span>{coin?.rank}</span>\n            </OverviewItem>\n            <OverviewItem>\n              <span>Symbol</span>\n              <span>{coin?.symbol}</span>\n            </OverviewItem>\n            <OverviewItem>\n              <span>Open Source</span>\n              <span>{coin?.open_source ? \"true\" : \"false\"}</span>\n            </OverviewItem>\n          </Overview>\n          <Description>{coin?.description}</Description>\n          <Overview>\n            <OverviewItem>\n              <span>Total Supply</span>\n              <span>{ticker?.total_supply}</span>\n            </OverviewItem>\n            <OverviewItem>\n              <span>Max Supply</span>\n              <span>{ticker?.max_supply}</span>\n            </OverviewItem>\n          </Overview>\n\n          <Tabs>\n            <Tab isActive={matchesPrice !== null}>\n              <Link to={`/${coinId}/price`}>Price</Link>\n            </Tab>\n            <Tab isActive={matchesChart !== null}>\n              <Link to={`/${coinId}/chart`}>Chart</Link>\n            </Tab>\n          </Tabs>\n\n          <Switch>\n            <Route path={`/:coinId/price`}>\n              <Price />\n            </Route>\n            <Route path={`/:coinId/chart`}>\n              <Chart coinId={coinId} />\n            </Route>\n          </Switch>\n        </>\n      )}\n    </Container>\n  );\n}\n\nexport default Coin;\n","import { Helmet } from \"react-helmet\";\nimport { useQuery } from \"react-query\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport { fetchAllCoins } from \"../api\";\n\ninterface ICoin {\n  id: string;\n  name: string;\n  symbol: string;\n  rank: number;\n  is_new: boolean;\n  is_active: boolean;\n  type: string;\n}\n\nconst Container = styled.div`\n  padding: 10px 20px;\n  max-width: 480px;\n  margin: 0 auto;\n`;\n\nconst Header = styled.header`\n  height: 15vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Title = styled.h1`\n  font-size: 40px;\n`;\n\nconst CoinList = styled.ul``;\n\nconst Loader = styled.div`\n  display: block;\n  text-align: center;\n`;\n\nconst Coin = styled.div`\n  background-color: ${(props) => props.theme.textColor};\n  color: ${(props) => props.theme.backgroundColor};\n  border-radius: 15px;\n  margin-bottom: 10px;\n  a {\n    padding: 20px;\n    display: flex;\n    align-items: center;\n    transition: color 0.2s ease-in;\n    &:hover {\n      color: ${(props) => props.theme.accentColor};\n    }\n  }\n`;\n\nconst CoinImage = styled.img`\n  width: 32px;\n  height: 32px;\n  margin-right: 5px;\n`;\n\nfunction Coins() {\n  // useQuery = useState + loading + caching\n  const { isLoading, data } = useQuery<ICoin[]>(\"allCoins\", fetchAllCoins);\n\n  const title = \"Coins\";\n\n  return (\n    <Container>\n      <Helmet>\n        <title>{title}</title>\n      </Helmet>\n      <Header>\n        <Title>{title}</Title>\n      </Header>\n      <CoinList>\n        {isLoading\n          ? \"Loading...\"\n          : data?.slice(0, 10).map((coin) => (\n              <Coin key={coin.id}>\n                <Link\n                  to={{\n                    pathname: `/${coin.id}`,\n                    state: { name: coin.name },\n                  }}\n                >\n                  <CoinImage\n                    src={`https://cryptoicon-api.vercel.app/api/icon/${coin.symbol.toLowerCase()}`}\n                  />\n                  {coin.name} &rarr;\n                </Link>\n              </Coin>\n            ))}\n      </CoinList>\n    </Container>\n  );\n}\n\nexport default Coins;\n","import { HashRouter, Route, Switch } from \"react-router-dom\";\nimport Coin from \"./routes/Coin\";\nimport Coins from \"./routes/Coins\";\n\nfunction Router() {\n  return (\n    <HashRouter>\n      <Switch>\n        <Route path=\"/:coinId\">\n          <Coin />\n        </Route>\n        <Route path=\"/\">\n          <Coins />\n        </Route>\n      </Switch>\n    </HashRouter>\n  );\n}\n\nexport default Router;\n","import { DefaultTheme } from \"styled-components\";\n\nexport enum ThemeName {\n  LIGHT = \"light\",\n  DARK = \"dark\",\n}\n\nexport const darkTheme: DefaultTheme = {\n  backgroundColor: \"#7f8c8d\",\n  textColor: \"#ecf0f1\",\n  accentColor: \"#f1c40f\",\n};\n\nexport const lightTheme: DefaultTheme = {\n  backgroundColor: \"#ecf0f1\",\n  textColor: \"#7f8c8d\",\n  accentColor: \"#f1c40f\",\n};\n","import styled, { createGlobalStyle, ThemeProvider } from \"styled-components\";\nimport Router from \"./Router\";\nimport { ReactQueryDevtools } from \"react-query/devtools\";\nimport { darkTheme, lightTheme, ThemeName } from \"./configs/theme\";\nimport { useState } from \"react\";\n\nconst GlobalStyle = createGlobalStyle`\n  @import url('https://fonts.googleapis.com/css2?family=Ubuntu&display=swap');\n  html, body, div, span, applet, object, iframe,\n  h1, h2, h3, h4, h5, h6, p, blockquote, pre,\n  a, abbr, acronym, address, big, cite, code,\n  del, dfn, em, img, ins, kbd, q, s, samp,\n  small, strike, strong, sub, sup, tt, var,\n  b, u, i, center,\n  dl, dt, dd, ol, ul, li,\n  fieldset, form, label, legend,\n  table, caption, tbody, tfoot, thead, tr, th, td,\n  article, aside, canvas, details, embed, \n  figure, figcaption, footer, header, hgroup, \n  menu, nav, output, ruby, section, summary,\n  time, mark, audio, video {\n    margin: 0;\n    padding: 0;\n    border: 0;\n    font-size: 100%;\n    font: inherit;\n    vertical-align: baseline;\n  }\n  /* HTML5 display-role reset for older browsers */\n  article, aside, details, figcaption, figure, \n  footer, header, hgroup, menu, nav, section {\n    display: block;\n  }\n  body {\n    line-height: 1;\n    font-family: 'Ubuntu', sans-serif;\n    background-color: ${(props) => props.theme.backgroundColor};\n    color: ${(props) => props.theme.textColor};\n  }\n  ol, ul {\n    list-style: none;\n  }\n  blockquote, q {\n    quotes: none;\n  }\n  blockquote:before, blockquote:after,\n  q:before, q:after {\n    content: '';\n    content: none;\n  }\n  table {\n    border-collapse: collapse;\n    border-spacing: 0;\n  }\n  a {\n    text-decoration: none;\n    color: inherit\n  }\n  * {\n    box-sizing: border-box;\n  }\n`;\n\nconst ButtonWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-end;\n`;\n\nconst ThemeToggleButton = styled.button`\n  background-color: ${(props) => props.theme.textColor};\n  color: ${(props) => props.theme.backgroundColor};\n  padding: 10px;\n  margin: 10px;\n  border-radius: 10px;\n`;\n\nfunction App() {\n  const [theme, setTheme] = useState<ThemeName>(ThemeName.DARK);\n  const toggleTheme = () => {\n    if (theme === ThemeName.LIGHT) setTheme(ThemeName.DARK);\n    else if (theme === ThemeName.DARK) setTheme(ThemeName.LIGHT);\n  };\n\n  return (\n    <ThemeProvider theme={theme === ThemeName.LIGHT ? lightTheme : darkTheme}>\n      <ButtonWrapper>\n        <ThemeToggleButton onClick={toggleTheme}>\n          Toggle theme\n        </ThemeToggleButton>\n      </ButtonWrapper>\n      <GlobalStyle />\n      <Router />\n      <ReactQueryDevtools initialIsOpen={true} />\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { QueryClient, QueryClientProvider } from \"react-query\";\nimport App from \"./App\";\n\nconst queryClient = new QueryClient();\n\nReactDOM.render(\n  <React.StrictMode>\n    <QueryClientProvider client={queryClient}>\n      <App />\n    </QueryClientProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}