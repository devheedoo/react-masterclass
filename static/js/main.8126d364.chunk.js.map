{"version":3,"sources":["states/statusAtom.ts","states/todosAtom.ts","states/todosSelector.ts","components/CreateStatus.tsx","components/CreateTodo.tsx","components/SaveAndClearLocalStorage.tsx","components/Todo.tsx","components/TodoList.tsx","App.tsx","index.tsx","theme.ts"],"names":["DEFAULT_STATUSES","statusAtom","atom","key","default","statusesAtom","todosAtom","todosSelector","selector","get","todos","status","filter","todo","CreateStatus","useRecoilState","statuses","setStatuses","useForm","register","handleSubmit","setValue","formState","onSubmit","console","log","validate","includes","type","placeholder","errors","message","CreateTodo","setTodos","useSetRecoilState","useRecoilValue","newTodo","id","Date","getTime","text","currentTodos","SaveAndClearLocalStorage","onClick","event","preventDefault","window","localStorage","setItem","JSON","stringify","clear","Todo","handleClick","name","currentTarget","currentIndex","findIndex","slice","map","s","disabled","TodoList","setStatus","loadSavedTodos","a","savedTodos","parse","getItem","savedStatuses","length","useEffect","onInput","value","style","marginTop","GlobalStyle","createGlobalStyle","props","theme","backgroundColor","textColor","App","ReactDOM","render","StrictMode","accentColor","document","getElementById"],"mappings":"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","file":"static/js/main.8126d364.chunk.js","sourcesContent":["import { atom } from 'recoil';\n\nexport const DEFAULT_STATUSES = ['TODO', 'DOING', 'DONE'];\n\nexport const statusAtom = atom<string>({\n  key: 'status',\n  default: DEFAULT_STATUSES[0],\n});\n\nexport const statusesAtom = atom<string[]>({\n  key: 'statuses',\n  default: DEFAULT_STATUSES,\n});\n","import { atom } from 'recoil';\nimport { ITodo } from '../interfaces';\n\nexport const todosAtom = atom<ITodo[]>({\n  key: 'todos',\n  default: [],\n});\n","import { selector } from 'recoil';\nimport { ITodo } from '../interfaces';\nimport { statusAtom } from './statusAtom';\nimport { todosAtom } from './todosAtom';\n\nexport const todosSelector = selector<ITodo[]>({\n  key: 'todosSelector',\n  get: ({ get }) => {\n    const todos = get(todosAtom);\n    const status = get(statusAtom);\n    return todos.filter((todo) => todo.status === status);\n  },\n});\n","import { useForm } from 'react-hook-form';\nimport { useRecoilState } from 'recoil';\nimport { statusesAtom } from '../states/statusAtom';\n\ninterface IForm {\n  status: string;\n}\n\nfunction CreateStatus() {\n  const [statuses, setStatuses] = useRecoilState(statusesAtom);\n  const { register, handleSubmit, setValue, formState } = useForm<IForm>();\n  const handleValid = ({ status }: IForm) => {\n    console.log('Add:', status);\n    setStatuses([...statuses, status]);\n    setValue('status', '');\n  };\n  return (\n    <form onSubmit={handleSubmit(handleValid)}>\n      <input\n        {...register('status', {\n          validate: (status) =>\n            statuses.includes(status)\n              ? `ERROR: ${status} already exists.`\n              : true,\n        })}\n        type=\"text\"\n        placeholder=\"Add a status\"\n      />\n      <button>Add</button>\n      <span>{formState.errors?.status?.message}</span>\n    </form>\n  );\n}\n\nexport default CreateStatus;\n","import { useForm } from 'react-hook-form';\nimport { useRecoilValue, useSetRecoilState } from 'recoil';\nimport { ITodo } from '../interfaces';\nimport { statusAtom } from '../states/statusAtom';\nimport { todosAtom } from '../states/todosAtom';\n\ninterface IForm {\n  todo: string;\n}\n\nfunction CreateTodo() {\n  const setTodos = useSetRecoilState(todosAtom);\n  const status = useRecoilValue(statusAtom);\n  const { register, handleSubmit, setValue } = useForm<IForm>();\n  const handleValid = ({ todo }: IForm) => {\n    console.log('Add:', todo);\n    const newTodo: ITodo = {\n      id: new Date().getTime(),\n      text: todo,\n      status,\n    };\n    setTodos((currentTodos) => [newTodo, ...currentTodos]);\n    setValue('todo', '');\n  };\n  return (\n    <form onSubmit={handleSubmit(handleValid)}>\n      <input {...register('todo')} type=\"text\" placeholder=\"Add a todo\" />\n      <button>Add</button>\n    </form>\n  );\n}\n\nexport default CreateTodo;\n","import { useRecoilValue } from 'recoil';\nimport { statusesAtom } from '../states/statusAtom';\nimport { todosSelector } from '../states/todosSelector';\n\nfunction SaveAndClearLocalStorage() {\n  const todos = useRecoilValue(todosSelector);\n  const statuses = useRecoilValue(statusesAtom);\n\n  const saveTodosOnLocalStorage = (\n    event: React.FormEvent<HTMLButtonElement>\n  ) => {\n    event.preventDefault();\n    window.localStorage.setItem('todos', JSON.stringify(todos));\n    window.localStorage.setItem('statuses', JSON.stringify(statuses));\n  };\n\n  const clearLocalStorage = (event: React.FormEvent<HTMLButtonElement>) => {\n    event.preventDefault();\n    window.localStorage.clear();\n  };\n\n  return (\n    <div>\n      <button onClick={saveTodosOnLocalStorage}>\n        Save todos on LocalStorage\n      </button>\n      <button onClick={clearLocalStorage}>Clear LocalStorage</button>\n    </div>\n  );\n}\n\nexport default SaveAndClearLocalStorage;\n","import React from 'react';\nimport { useRecoilValue, useSetRecoilState } from 'recoil';\nimport { ITodo } from '../interfaces';\nimport { statusesAtom } from '../states/statusAtom';\nimport { todosAtom } from '../states/todosAtom';\n\nfunction Todo({ id, text, status }: ITodo) {\n  const setTodos = useSetRecoilState(todosAtom);\n  const statuses = useRecoilValue(statusesAtom);\n  const handleClick = (event: React.FormEvent<HTMLButtonElement>) => {\n    const {\n      currentTarget: { name },\n    } = event;\n\n    setTodos((todos) => {\n      const currentIndex = todos.findIndex((todo) => todo.id === id);\n      const newTodo = { id, text, status: name };\n      return [\n        ...todos.slice(0, currentIndex),\n        newTodo,\n        ...todos.slice(currentIndex + 1),\n      ];\n    });\n  };\n\n  return (\n    <li>\n      <span>{text}</span>\n      {statuses.map((s) => (\n        <button name={s} onClick={handleClick} disabled={s === status}>\n          {s}\n        </button>\n      ))}\n    </li>\n  );\n}\n\nexport default Todo;\n","import React, { useEffect } from 'react';\nimport { useRecoilState, useRecoilValue, useSetRecoilState } from 'recoil';\nimport {\n  DEFAULT_STATUSES,\n  statusAtom,\n  statusesAtom,\n} from '../states/statusAtom';\nimport { todosAtom } from '../states/todosAtom';\nimport { todosSelector } from '../states/todosSelector';\nimport CreateStatus from './CreateStatus';\nimport CreateTodo from './CreateTodo';\nimport SaveAndClearLocalStorage from './SaveAndClearLocalStorage';\nimport Todo from './Todo';\n\nfunction TodoList() {\n  const todos = useRecoilValue(todosSelector);\n  const setTodos = useSetRecoilState(todosAtom);\n  const [statuses, setStatuses] = useRecoilState(statusesAtom);\n\n  const setStatus = useSetRecoilState(statusAtom);\n  const handleInput = (event: React.FormEvent<HTMLSelectElement>) => {\n    const {\n      currentTarget: { value },\n    } = event;\n    setStatus(value);\n  };\n\n  const loadSavedTodos = async () => {\n    const savedTodos = JSON.parse(window.localStorage.getItem('todos') ?? '[]');\n    const savedStatuses = JSON.parse(\n      window.localStorage.getItem('statuses') ?? '[]'\n    );\n    console.log('savedTodos:', savedTodos);\n    console.log('statuses:', savedStatuses);\n    setTodos(savedTodos);\n    savedStatuses.length > 0\n      ? setStatuses(savedStatuses)\n      : setStatuses(DEFAULT_STATUSES);\n  };\n\n  useEffect(() => {\n    loadSavedTodos();\n  }, []);\n\n  return (\n    <div>\n      <h1>TODOLIST</h1>\n      <SaveAndClearLocalStorage />\n      <CreateStatus />\n      <select onInput={handleInput}>\n        {statuses.map((status) => (\n          <option value={status}>{status}</option>\n        ))}\n      </select>\n      <CreateTodo />\n      <div style={{ marginTop: 10 }}>\n        <ul>\n          {todos.map((todo) => (\n            <Todo key={todo.id} {...todo} />\n          ))}\n        </ul>\n      </div>\n    </div>\n  );\n}\n\nexport default TodoList;\n","import { createGlobalStyle } from 'styled-components';\nimport TodoList from './components/TodoList';\n\nconst GlobalStyle = createGlobalStyle`\n  @import url('https://fonts.googleapis.com/css2?family=Ubuntu&display=swap');\n  html, body, div, span, applet, object, iframe,\n  h1, h2, h3, h4, h5, h6, p, blockquote, pre,\n  a, abbr, acronym, address, big, cite, code,\n  del, dfn, em, img, ins, kbd, q, s, samp,\n  small, strike, strong, sub, sup, tt, var,\n  b, u, i, center,\n  dl, dt, dd, ol, ul, li,\n  fieldset, form, label, legend,\n  table, caption, tbody, tfoot, thead, tr, th, td,\n  article, aside, canvas, details, embed, \n  figure, figcaption, footer, header, hgroup, \n  menu, nav, output, ruby, section, summary,\n  time, mark, audio, video {\n    margin: 0;\n    padding: 0;\n    border: 0;\n    font-size: 100%;\n    font: inherit;\n    vertical-align: baseline;\n  }\n  /* HTML5 display-role reset for older browsers */\n  article, aside, details, figcaption, figure, \n  footer, header, hgroup, menu, nav, section {\n    display: block;\n  }\n  body {\n    line-height: 1;\n    font-family: 'Ubuntu', sans-serif;\n    background-color: ${(props) => props.theme.backgroundColor};\n    color: ${(props) => props.theme.textColor};\n  }\n  ol, ul {\n    list-style: none;\n  }\n  blockquote, q {\n    quotes: none;\n  }\n  blockquote:before, blockquote:after,\n  q:before, q:after {\n    content: '';\n    content: none;\n  }\n  table {\n    border-collapse: collapse;\n    border-spacing: 0;\n  }\n  a {\n    text-decoration: none;\n    color: inherit\n  }\n  * {\n    box-sizing: border-box;\n  }\n`;\n\nfunction App() {\n  return (\n    <>\n      <GlobalStyle />\n      <TodoList />\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { RecoilRoot } from \"recoil\";\nimport { ThemeProvider } from \"styled-components\";\nimport App from \"./App\";\nimport { darkTheme } from \"./theme\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <RecoilRoot>\n      <ThemeProvider theme={darkTheme}>\n        <App />\n      </ThemeProvider>\n    </RecoilRoot>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","import { DefaultTheme } from 'styled-components';\n\nexport const darkTheme: DefaultTheme = {\n  backgroundColor: '#cd6133',\n  textColor: '#f7f1e3',\n  accentColor: '#ff793f',\n};\n"],"sourceRoot":""}